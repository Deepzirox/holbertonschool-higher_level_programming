Testing 2-matrix_divided
------------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


-------------------------------------------------------------------------------

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero


-------------------------------------------------------------------------------
>>> matrix_divided([], 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], []], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], [1,2,3]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], []], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(1, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("Error", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(True, True)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(False, False)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[[]], [[]]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[True, True], [False, False]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, "", 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

-------------------------------------------------------------------------------
>>> matrix_divided([[1,2,3], [1,2]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3], [1,2,3], [20,20,20,20]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


-------------------------------------------------------------------------------
>>> matrix_divided([[1,2,3], [1,2,3]], "asd")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1,2,3], [1,2,3]], True)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1,2,3], [1,2,3]], [])
Traceback (most recent call last):
TypeError: div must be a number


-------------------------------------------------------------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[-20, 10, 1], [-20, 10, 1], [-20, 10, 1]], 5)
[[-4.0, 2.0, 0.2], [-4.0, 2.0, 0.2], [-4.0, 2.0, 0.2]]

>>> matrix_divided([[1]], 2)
[[0.5]]